{"version":3,"file":"static/js/972.0d61b9c9.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/layout/src/container.tsx","pages/Home.jsx","reduxToolkit/contacts/selectors.js","../node_modules/@chakra-ui/layout/src/heading.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface ContainerProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Container\"> {\n  /**\n   * If `true`, container will center its children\n   * regardless of their width.\n   *\n   * @default false\n   */\n  centerContent?: boolean\n}\n\n/**\n * Layout component used to wrap app or website content\n *\n * It sets `margin-left` and `margin-right` to `auto`,\n * to keep its content centered.\n *\n * It also sets a default max-width of `60ch` (60 characters).\n *\n * @see Docs https://chakra-ui.com/docs/components/container\n */\nexport const Container = forwardRef<ContainerProps, \"div\">(function Container(\n  props,\n  ref,\n) {\n  const { className, centerContent, ...rest } = omitThemingProps(props)\n\n  const styles = useStyleConfig(\"Container\", props)\n\n  return (\n    <chakra.div\n      ref={ref}\n      className={cx(\"chakra-container\", className)}\n      {...rest}\n      __css={{\n        ...styles,\n        ...(centerContent && {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }),\n      }}\n    />\n  )\n})\n\nContainer.displayName = \"Container\"\n","import { Container, Heading, Text } from \"@chakra-ui/react\";\nimport { Link as ReactRouterLink, useLocation, useNavigate} from \"react-router-dom\";\nimport { Link as ChakraLink} from '@chakra-ui/react'\nimport { useEffect } from \"react\";\nimport { selectIsLogIn, selectUser } from \"reduxToolkit/auth/selectors\";\nimport { useSelector } from \"react-redux\";\nimport { selectIsLoading } from \"reduxToolkit/contacts/selectors\";\n\nconst Home = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const isLogIn = useSelector(selectIsLogIn);\n    const isLoading = useSelector(selectIsLoading)\n    const userName = useSelector(selectUser).name;\n\n    useEffect(() => {\n        if (location.pathname !== '/') navigate('/');\n    }, [location, navigate])\n    \n    return (\n        <Container p={6}>\n            {isLoading && (<h2>Please wait)) Our app is connecting with server. It might takes some time at the first time. Thanks for you patience)))</h2>)}\n            {   !isLogIn ?\n                (<>\n                    <Heading mb={6}>Hello! Use me for your contacts list)))</Heading>\n                    <Text fontSize='2xl'>\n                        <ChakraLink as={ReactRouterLink} to='/login' fontWeight={700} textDecoration='underline' _hover={{ fontWeight: 700, color: 'teal' }}>Log in</ChakraLink> if you already have an account or \n                        <ChakraLink as={ReactRouterLink} to='/register' fontWeight={700} textDecoration='underline' _hover={{ fontWeight: 700, color: 'teal' }}> register</ChakraLink> if you don't</Text>\n                </>)\n                : (<>\n                    <Heading mb={6}>Hello, {userName}! How are you doing?)))</Heading>\n                    <Text fontSize='2xl'> Your contacts are  \n                        <ChakraLink as={ReactRouterLink} to='/contacts' fontWeight={700} textDecoration='underline' _hover={{ fontWeight: 700, color: 'teal' }} ml={1}>HERE</ChakraLink></Text>\n                </>)}\n        </Container>\n    )\n}\n\nexport default Home;","\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterWord = state => state.filter;\n\nexport const  selectFiltredContacts = state => {\n    const contacts = selectContacts(state);\n    const filter = selectFilterWord(state);\n    if(filter) return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\n        return contacts;\n\n}\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface HeadingProps\n  extends HTMLChakraProps<\"h2\">,\n    ThemingProps<\"Heading\"> {}\n\n/**\n * `Heading` is used to render semantic HTML heading elements.\n *\n * By default, renders as `h2` with themantic size `xl`\n *\n * @see Docs https://chakra-ui.com/docs/components/heading\n */\nexport const Heading = forwardRef<HeadingProps, \"h2\">(function Heading(\n  props,\n  ref,\n) {\n  const styles = useStyleConfig(\"Heading\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.h2\n      ref={ref}\n      className={cx(\"chakra-heading\", props.className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nHeading.displayName = \"Heading\"\n"],"names":["Container","forwardRef","props","ref","omitThemingProps","className","centerContent","rest","styles","useStyleConfig","chakra","div","cx","__css","display","flexDirection","alignItems","displayName","location","useLocation","navigate","useNavigate","isLogIn","useSelector","selectIsLogIn","isLoading","selectIsLoading","userName","selectUser","name","useEffect","pathname","_jsxs","p","children","_jsx","_Fragment","Heading","mb","Text","fontSize","ChakraLink","as","ReactRouterLink","to","fontWeight","textDecoration","_hover","color","ml","selectContacts","state","contacts","items","selectError","error","selectFilterWord","filter","selectFiltredContacts","contact","toLowerCase","includes","h2"],"sourceRoot":""}